<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>服务器 on 我不是帅才</title>
    <link>https://www.3afun.com/categories/%E6%9C%8D%E5%8A%A1%E5%99%A8/</link>
    <description>Recent content in 服务器 on 我不是帅才</description>
    <generator>Hugo -- gohugo.io</generator>
    <copyright>Copyright 3AFun</copyright>
    <lastBuildDate>Mon, 20 Nov 2017 17:27:00 +0800</lastBuildDate>
    
	<atom:link href="https://www.3afun.com/categories/%E6%9C%8D%E5%8A%A1%E5%99%A8/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Crontab 定时执行任务的环境变量问题</title>
      <link>https://www.3afun.com/post/2017/crontab-%E5%AE%9A%E6%97%B6%E6%89%A7%E8%A1%8C%E4%BB%BB%E5%8A%A1%E7%9A%84%E7%8E%AF%E5%A2%83%E5%8F%98%E9%87%8F%E9%97%AE%E9%A2%98/</link>
      <pubDate>Mon, 20 Nov 2017 17:27:00 +0800</pubDate>
      
      <guid>https://www.3afun.com/post/2017/crontab-%E5%AE%9A%E6%97%B6%E6%89%A7%E8%A1%8C%E4%BB%BB%E5%8A%A1%E7%9A%84%E7%8E%AF%E5%A2%83%E5%8F%98%E9%87%8F%E9%97%AE%E9%A2%98/</guid>
      <description>今天写了一个脚本文件，有用到Python3中time库的localtime函数。在单独执行该脚本文件时候，可以支持获取服务器date时间。但</description>
    </item>
    
    <item>
      <title>Tomcat8 多实例 Unix daemon 模式 </title>
      <link>https://www.3afun.com/post/2017/tomcat8-%E5%A4%9A%E5%AE%9E%E4%BE%8B-unix-daemon-%E6%A8%A1%E5%BC%8F/</link>
      <pubDate>Mon, 11 Sep 2017 18:47:00 +0800</pubDate>
      
      <guid>https://www.3afun.com/post/2017/tomcat8-%E5%A4%9A%E5%AE%9E%E4%BE%8B-unix-daemon-%E6%A8%A1%E5%BC%8F/</guid>
      <description>一、事前准备 Tomcat8（版本8.5.20） 下载地址 JDK8（版本号1.8.0_144） 下载地址 二、配置部署 目录说明 jdk 安装目录 /usr/java/jdk1.8.0_144 tomcat 安装目录</description>
    </item>
    
    <item>
      <title>nginx pid No such file or directory解决办法</title>
      <link>https://www.3afun.com/post/2017/nginx-pid-no-such-file-or-directory%E8%A7%A3%E5%86%B3%E5%8A%9E%E6%B3%95/</link>
      <pubDate>Wed, 14 Jun 2017 11:32:00 +0800</pubDate>
      
      <guid>https://www.3afun.com/post/2017/nginx-pid-no-such-file-or-directory%E8%A7%A3%E5%86%B3%E5%8A%9E%E6%B3%95/</guid>
      <description>服务器重启后，有时会需要重新启动 nginx，采用 nginx -s reload 提示 nginx: [error] open() &amp;quot;/var/run/nginx.pid&amp;quot; failed (2: No such file or directory) 是因为服务器重启时丢了pid文件。 这种情况下可以使用 nginx -c，</description>
    </item>
    
    <item>
      <title>nginx 安装SSL证书</title>
      <link>https://www.3afun.com/post/2016/nginx-%E5%AE%89%E8%A3%85ssl%E8%AF%81%E4%B9%A6/</link>
      <pubDate>Thu, 13 Oct 2016 18:32:00 +0800</pubDate>
      
      <guid>https://www.3afun.com/post/2016/nginx-%E5%AE%89%E8%A3%85ssl%E8%AF%81%E4%B9%A6/</guid>
      <description>1.证书准备 下载CA证书，在此我下载下来的文件是IntermediateCA.cer和ssl_certificate.cer 2.Key证书转</description>
    </item>
    
    <item>
      <title>使用crontab，定时执行一个python脚本</title>
      <link>https://www.3afun.com/post/2016/%E4%BD%BF%E7%94%A8crontab%E5%AE%9A%E6%97%B6%E6%89%A7%E8%A1%8C%E4%B8%80%E4%B8%AApython%E8%84%9A%E6%9C%AC/</link>
      <pubDate>Wed, 06 Jan 2016 19:19:00 +0800</pubDate>
      
      <guid>https://www.3afun.com/post/2016/%E4%BD%BF%E7%94%A8crontab%E5%AE%9A%E6%97%B6%E6%89%A7%E8%A1%8C%E4%B8%80%E4%B8%AApython%E8%84%9A%E6%9C%AC/</guid>
      <description>添加任务，执行命令： crontab -e 在新开的文件里添加： 00 05 * * * python /data/Backup_DB_MAT_TABLE_INSTALL.py 保存退出。 !wq 重启crond： service crond restart</description>
    </item>
    
    <item>
      <title>Spring4.x MVC responsebody 406错误的解决方案</title>
      <link>https://www.3afun.com/post/2015/spring4.x-mvc-responsebody-406%E9%94%99%E8%AF%AF%E7%9A%84%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/</link>
      <pubDate>Thu, 10 Sep 2015 17:32:00 +0800</pubDate>
      
      <guid>https://www.3afun.com/post/2015/spring4.x-mvc-responsebody-406%E9%94%99%E8%AF%AF%E7%9A%84%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/</guid>
      <description>Spring MVC REST 风格API升级到Spring4.x（4.1.1.RELEASE）+的时候报了406错误。结合网上方案，最终定位为： 1、pom文件 &amp;lt;dependency&amp;gt; &amp;lt;groupId&amp;gt;com.fasterxml.jackson.core&amp;lt;/groupId&amp;gt; &amp;lt;artifactId&amp;gt;jackson-core&amp;lt;/artifactId&amp;gt;</description>
    </item>
    
    <item>
      <title>ajp方式实现Apache负载均衡&#43;Tomcat集群</title>
      <link>https://www.3afun.com/post/2014/ajp%E6%96%B9%E5%BC%8F%E5%AE%9E%E7%8E%B0apache%E8%B4%9F%E8%BD%BD%E5%9D%87%E8%A1%A1&#43;tomcat%E9%9B%86%E7%BE%A4/</link>
      <pubDate>Wed, 24 Sep 2014 18:11:27 +0800</pubDate>
      
      <guid>https://www.3afun.com/post/2014/ajp%E6%96%B9%E5%BC%8F%E5%AE%9E%E7%8E%B0apache%E8%B4%9F%E8%BD%BD%E5%9D%87%E8%A1%A1&#43;tomcat%E9%9B%86%E7%BE%A4/</guid>
      <description>目标: 使用 apache 和 tomcat 配置一个可以应用的 web 网站，要达到以下要求： Apache 做为 HttpServer ，后面连接多个 tomcat 应用实例，并进行负载均衡。 注：本例程以一台机器为例子，即同</description>
    </item>
    
    <item>
      <title>Centos 编译安装Git(git clone git push git pull 401错误)</title>
      <link>https://www.3afun.com/post/2014/centos-%E7%BC%96%E8%AF%91%E5%AE%89%E8%A3%85gitgit-clone-git-push-git-pull-401%E9%94%99%E8%AF%AF/</link>
      <pubDate>Tue, 22 Apr 2014 19:10:27 +0800</pubDate>
      
      <guid>https://www.3afun.com/post/2014/centos-%E7%BC%96%E8%AF%91%E5%AE%89%E8%A3%85gitgit-clone-git-push-git-pull-401%E9%94%99%E8%AF%AF/</guid>
      <description>低版本时osc git clone git pull git push 会报401错误 1、准备工作 yum install curl curl-devel zlib-devel openssl-devel perl perl-devel cpio expat-devel gettext-devel 2、下载git 去下载页面 下载 wget https://git-core.googlecode.com/files/git-1.9.0.tar.gz 3、解压安装 Java代码 收藏代码 tar</description>
    </item>
    
    <item>
      <title>Centos6.3 yum方式安装nginx</title>
      <link>https://www.3afun.com/post/2014/centos6.3-yum%E6%96%B9%E5%BC%8F%E5%AE%89%E8%A3%85nginx/</link>
      <pubDate>Tue, 22 Apr 2014 17:44:27 +0800</pubDate>
      
      <guid>https://www.3afun.com/post/2014/centos6.3-yum%E6%96%B9%E5%BC%8F%E5%AE%89%E8%A3%85nginx/</guid>
      <description>1、软件包管理 rpm -ivh http://nginx.org/packages/centos/6/noarch/RPMS/nginx-release-centos-6-0.el6.ngx.noarch.rpm CentOS 5，就用下面的源： rpm -ivh http://nginx.org/packages/centos/5/noarch/RPMS/nginx-release-centos-5-0.el5.ngx.noarch.rpm Red Hat Enterprise Linux 6： rpm -ivh http://nginx.org/packages/rhel/6/noarch/RPMS/nginx-release-rhel-6-0.el6.ngx.noarch.rpm Red Hat Enterprise Linux 5： rpm -ivh http://nginx.org/packages/rhel/5/noarch/RPMS/nginx-release-rhel-5-0.el5.ngx.noarch.rpm 2、安装 yum install nginx 3、启动 service nginx start 4、测试 访问：http://1</description>
    </item>
    
    <item>
      <title>yum方式安装php</title>
      <link>https://www.3afun.com/post/2014/yum%E6%96%B9%E5%BC%8F%E5%AE%89%E8%A3%85php/</link>
      <pubDate>Tue, 22 Apr 2014 17:27:27 +0800</pubDate>
      
      <guid>https://www.3afun.com/post/2014/yum%E6%96%B9%E5%BC%8F%E5%AE%89%E8%A3%85php/</guid>
      <description>1、安装 yum install php php-mysql php-fpm 2、启动 service php-fpm start</description>
    </item>
    
    <item>
      <title>yum方式安装MySQL</title>
      <link>https://www.3afun.com/post/2014/yum%E6%96%B9%E5%BC%8F%E5%AE%89%E8%A3%85mysql/</link>
      <pubDate>Tue, 22 Apr 2014 17:18:27 +0800</pubDate>
      
      <guid>https://www.3afun.com/post/2014/yum%E6%96%B9%E5%BC%8F%E5%AE%89%E8%A3%85mysql/</guid>
      <description>1、安装 yum install mysql mysql-server 2、启动 service mysqld start 3、登录 mysql -uroot -p 4、改密码 set password for root@localhost=password(&#39;your_password&#39;) 5、查看密码 select user,host,password from mysql.user 备注： 更改数据库编码参考： SET character_set_client = utf8 ;</description>
    </item>
    
    <item>
      <title>SpringMVC redirect重定向传递参数</title>
      <link>https://www.3afun.com/post/2014/springmvc-redirect%E9%87%8D%E5%AE%9A%E5%90%91%E4%BC%A0%E9%80%92%E5%8F%82%E6%95%B0/</link>
      <pubDate>Fri, 04 Apr 2014 14:46:00 +0800</pubDate>
      
      <guid>https://www.3afun.com/post/2014/springmvc-redirect%E9%87%8D%E5%AE%9A%E5%90%91%E4%BC%A0%E9%80%92%E5%8F%82%E6%95%B0/</guid>
      <description>URL不接参数的非重定向可以使用 Model.addAttribute(Object arg1); 重定向可以使用如下方法传递对象参数 RedirectAttributes.addFlashAttribute(String arg0, Object arg1) 其他传递方法则可参考RedirectAttributes类的方</description>
    </item>
    
    <item>
      <title>nginx location规则替换</title>
      <link>https://www.3afun.com/post/2014/nginx-location%E8%A7%84%E5%88%99%E6%9B%BF%E6%8D%A2/</link>
      <pubDate>Wed, 05 Mar 2014 16:05:27 +0800</pubDate>
      
      <guid>https://www.3afun.com/post/2014/nginx-location%E8%A7%84%E5%88%99%E6%9B%BF%E6%8D%A2/</guid>
      <description>server { listen 80; server_name www.6dgame.com 6dgame.com; location /2013/ { proxy_pass http://127.0.0.1:8081/; } location / { proxy_pass http://127.0.0.1:8080/; } error_page 500 502 503 504 /50x.html; location = /50x.html { root html; } } 对于此种设置方法， 访问：http://54.200.150.182:808</description>
    </item>
    
    <item>
      <title>SpringMVC Controller层中 request接收参数乱码</title>
      <link>https://www.3afun.com/post/2014/springmvc-controller%E5%B1%82%E4%B8%AD-request%E6%8E%A5%E6%94%B6%E5%8F%82%E6%95%B0%E4%B9%B1%E7%A0%81/</link>
      <pubDate>Wed, 26 Feb 2014 11:09:27 +0800</pubDate>
      
      <guid>https://www.3afun.com/post/2014/springmvc-controller%E5%B1%82%E4%B8%AD-request%E6%8E%A5%E6%94%B6%E5%8F%82%E6%95%B0%E4%B9%B1%E7%A0%81/</guid>
      <description>直接使用 String email = request.getParameter(&amp;quot;email&amp;quot;); 接收到email是乱码，需要转换 email = new String(request.getParameter(&amp;quot;email&amp;quot;).getBytes(&amp;quot;ISO-8859-1&amp;quot;),&amp;quot;UTF-8&amp;quot;); 这样麻烦还需要处理异常。 还可以这么解决： web.xml &amp;lt;filter&amp;gt; &amp;lt;filter-name&amp;gt;CharacterEncodingFilter&amp;lt;/filter-name&amp;gt; &amp;lt;filter-class&amp;gt;org.springframework.web.filter.CharacterEncodingFilter&amp;lt;/filter-class&amp;gt; &amp;lt;init-param&amp;gt; &amp;lt;param-name&amp;gt;encoding&amp;lt;/param-name&amp;gt; &amp;lt;param-value&amp;gt;utf-8&amp;lt;/param-value&amp;gt; &amp;lt;/init-param&amp;gt; &amp;lt;/filter&amp;gt; &amp;lt;filter-mapping&amp;gt; &amp;lt;filter-name&amp;gt;CharacterEncodingFilter&amp;lt;/filter-name&amp;gt; &amp;lt;url-pattern&amp;gt;/*&amp;lt;/url-pattern&amp;gt; &amp;lt;/filter-mapping&amp;gt;</description>
    </item>
    
    <item>
      <title>亚马逊EC2上搭建Node.js</title>
      <link>https://www.3afun.com/post/2014/%E4%BA%9A%E9%A9%AC%E9%80%8Aec2%E4%B8%8A%E6%90%AD%E5%BB%BAnode.js/</link>
      <pubDate>Fri, 14 Feb 2014 16:04:27 +0800</pubDate>
      
      <guid>https://www.3afun.com/post/2014/%E4%BA%9A%E9%A9%AC%E9%80%8Aec2%E4%B8%8A%E6%90%AD%E5%BB%BAnode.js/</guid>
      <description>1、安装Node,js编译工具 sudo yum install gcc-c++ openssl-devel make curl git 2、下载Node.js源码、编译、安装 wget http://nodejs.org/dist/v0.10.25/node-v0.10.25.tar.gz tar -xvf node-v0.10.25.tar.gz cd node-v0.10.25 ./configure make 在此make会需要很长时间，我用了大约</description>
    </item>
    
    <item>
      <title>Node.js学习笔记（一）从无到有之Node.js安装、helloworld部署运行</title>
      <link>https://www.3afun.com/post/2014/node.js%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E4%B8%80%E4%BB%8E%E6%97%A0%E5%88%B0%E6%9C%89%E4%B9%8Bnode.js%E5%AE%89%E8%A3%85helloworld%E9%83%A8%E7%BD%B2%E8%BF%90%E8%A1%8C/</link>
      <pubDate>Mon, 20 Jan 2014 16:40:27 +0800</pubDate>
      
      <guid>https://www.3afun.com/post/2014/node.js%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E4%B8%80%E4%BB%8E%E6%97%A0%E5%88%B0%E6%9C%89%E4%B9%8Bnode.js%E5%AE%89%E8%A3%85helloworld%E9%83%A8%E7%BD%B2%E8%BF%90%E8%A1%8C/</guid>
      <description>一、下载 进入 官网，下载适合版本。 在此我选用的是64位windows：node-v0.10.24-x64.msi。 二、安装 ① 安装下载下来的安装</description>
    </item>
    
    <item>
      <title>Node.js学习笔记（二）开发调试利器之supervisor</title>
      <link>https://www.3afun.com/post/2014/node.js%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E4%BA%8C%E5%BC%80%E5%8F%91%E8%B0%83%E8%AF%95%E5%88%A9%E5%99%A8%E4%B9%8Bsupervisor/</link>
      <pubDate>Mon, 20 Jan 2014 16:40:27 +0800</pubDate>
      
      <guid>https://www.3afun.com/post/2014/node.js%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E4%BA%8C%E5%BC%80%E5%8F%91%E8%B0%83%E8%AF%95%E5%88%A9%E5%99%A8%E4%B9%8Bsupervisor/</guid>
      <description>node.js开发调试时候每次更新代码都需要重启node.js，开发调试效率之低令人愤懑，然后却有这样一款小工具supervisor。它会监</description>
    </item>
    
    <item>
      <title>Nginx&#43;Tomcat获取用户真实IP</title>
      <link>https://www.3afun.com/post/2013/nginx&#43;tomcat%E8%8E%B7%E5%8F%96%E7%94%A8%E6%88%B7%E7%9C%9F%E5%AE%9Eip/</link>
      <pubDate>Thu, 26 Dec 2013 19:30:27 +0800</pubDate>
      
      <guid>https://www.3afun.com/post/2013/nginx&#43;tomcat%E8%8E%B7%E5%8F%96%E7%94%A8%E6%88%B7%E7%9C%9F%E5%AE%9Eip/</guid>
      <description>项目在测试环境获取用户IP没问题，在正式环境下使用 request.getRemoteHost() 获取的始终是127.0.0.1，最后才想到问题所在：正式环境使用了nginx作为代理，获</description>
    </item>
    
    <item>
      <title>AWS EC2上配置Tomcat</title>
      <link>https://www.3afun.com/post/2013/aws-ec2%E4%B8%8A%E9%85%8D%E7%BD%AEtomcat/</link>
      <pubDate>Thu, 07 Nov 2013 14:25:00 +0800</pubDate>
      
      <guid>https://www.3afun.com/post/2013/aws-ec2%E4%B8%8A%E9%85%8D%E7%BD%AEtomcat/</guid>
      <description>一、官网下载 Tomcat ，然后上传解压到EC2主机上，我这解压到： /usr/local/apache-tomcat-7.0.47 二、添加环境变量。此次EC2主机是自带JRE的，位置是： /usr/lib/jvm 我只需在/etc/pro</description>
    </item>
    
    <item>
      <title>touch命令更新目录及其子目录下的时间</title>
      <link>https://www.3afun.com/post/2013/touch%E5%91%BD%E4%BB%A4%E6%9B%B4%E6%96%B0%E7%9B%AE%E5%BD%95%E5%8F%8A%E5%85%B6%E5%AD%90%E7%9B%AE%E5%BD%95%E4%B8%8B%E7%9A%84%E6%97%B6%E9%97%B4/</link>
      <pubDate>Tue, 05 Nov 2013 11:01:00 +0800</pubDate>
      
      <guid>https://www.3afun.com/post/2013/touch%E5%91%BD%E4%BB%A4%E6%9B%B4%E6%96%B0%E7%9B%AE%E5%BD%95%E5%8F%8A%E5%85%B6%E5%AD%90%E7%9B%AE%E5%BD%95%E4%B8%8B%E7%9A%84%E6%97%B6%E9%97%B4/</guid>
      <description>网站改版，上线后发现部分页面还是改版前的（服务器时间晚于浏览器客户端时间），查看代码却是最新的。原因就是服务器上的站点代码目录时间未更新到最</description>
    </item>
    
  </channel>
</rss>