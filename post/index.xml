<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on 我不是帅才</title>
    <link>https://www.3afun.com/post/</link>
    <description>Recent content in Posts on 我不是帅才</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Fri, 13 Apr 2018 16:18:49 +0800</lastBuildDate>
    
	<atom:link href="https://www.3afun.com/post/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Ubuntu16.04 搭建以太坊Ethereum私链(2)</title>
      <link>https://www.3afun.com/post/2018/ubuntu16.04-%E6%90%AD%E5%BB%BA%E4%BB%A5%E5%A4%AA%E5%9D%8Aethereum%E7%A7%81%E9%93%BE2/</link>
      <pubDate>Fri, 13 Apr 2018 16:18:49 +0800</pubDate>
      
      <guid>https://www.3afun.com/post/2018/ubuntu16.04-%E6%90%AD%E5%BB%BA%E4%BB%A5%E5%A4%AA%E5%9D%8Aethereum%E7%A7%81%E9%93%BE2/</guid>
      <description>前面几篇文章我们介绍了私有链的服务器搭建和客户端连接私有服务器,接下来我们就要学习如何保证服务器端退出后还能继续提供稳定服务,解决客户端可以</description>
    </item>
    
    <item>
      <title>Ethereum wallet以太坊钱包链接Geth Server私有链</title>
      <link>https://www.3afun.com/post/2018/ethereum-wallet%E4%BB%A5%E5%A4%AA%E5%9D%8A%E9%92%B1%E5%8C%85%E9%93%BE%E6%8E%A5geth-server%E7%A7%81%E6%9C%89%E9%93%BE/</link>
      <pubDate>Thu, 12 Apr 2018 18:31:44 +0800</pubDate>
      
      <guid>https://www.3afun.com/post/2018/ethereum-wallet%E4%BB%A5%E5%A4%AA%E5%9D%8A%E9%92%B1%E5%8C%85%E9%93%BE%E6%8E%A5geth-server%E7%A7%81%E6%9C%89%E9%93%BE/</guid>
      <description>上一篇文章里,我们讲到 Ubuntu16.04 搭建以太坊Ethereum私链 这次,我就要来介绍如何下载我们的钱包来链接我们的私有链。 以太坊钱包Wallet下载 钱包</description>
    </item>
    
    <item>
      <title>Ubuntu16.04 搭建以太坊Ethereum私链</title>
      <link>https://www.3afun.com/post/2018/ubuntu16.04-%E6%90%AD%E5%BB%BA%E4%BB%A5%E5%A4%AA%E5%9D%8Aethereum%E7%A7%81%E9%93%BE1/</link>
      <pubDate>Wed, 11 Apr 2018 15:43:48 +0800</pubDate>
      
      <guid>https://www.3afun.com/post/2018/ubuntu16.04-%E6%90%AD%E5%BB%BA%E4%BB%A5%E5%A4%AA%E5%9D%8Aethereum%E7%A7%81%E9%93%BE1/</guid>
      <description>一、说明 想尝试基于以太坊的应用或者Tokens发布，无奈正常网络测试需要用Ether，购买麻烦，各步骤还得需要消耗以太币，不过我们可以搭建私</description>
    </item>
    
    <item>
      <title>ERC223 标准规范</title>
      <link>https://www.3afun.com/post/2018/erc-223-token-standard/</link>
      <pubDate>Mon, 09 Apr 2018 15:43:48 +0800</pubDate>
      
      <guid>https://www.3afun.com/post/2018/erc-223-token-standard/</guid>
      <description>翻译自 https://github.com/ethereum/EIPs/issues/223 抽象 以下描述了标准代币合约函数和特定的代币,这样的实现代币可以避免意外发送到合约,可以是代币事物表现的像其他事务一样。 动机 以下描述了</description>
    </item>
    
    <item>
      <title>ERC20 标准规范</title>
      <link>https://www.3afun.com/post/2018/erc-20-token-standard/</link>
      <pubDate>Wed, 04 Apr 2018 15:43:48 +0800</pubDate>
      
      <guid>https://www.3afun.com/post/2018/erc-20-token-standard/</guid>
      <description>简要说明 该文主要是一个以太币智能合约的标准接口说明。 抽象 以下将要说明的标准允许你去实现基于智能合约的标准代币（Tokens）API提供的接口</description>
    </item>
    
    <item>
      <title>Network Error Unable to load the page的解决办法</title>
      <link>https://www.3afun.com/post/2017/network-error-unable-to-load-the-page%E7%9A%84%E8%A7%A3%E5%86%B3%E5%8A%9E%E6%B3%95/</link>
      <pubDate>Fri, 15 Dec 2017 13:42:00 +0800</pubDate>
      
      <guid>https://www.3afun.com/post/2017/network-error-unable-to-load-the-page%E7%9A%84%E8%A7%A3%E5%86%B3%E5%8A%9E%E6%B3%95/</guid>
      <description>Cocos2d-x加载一个http页面A，A中其中含有一个链接到https页面B。现在B页面返回到A页面报错Unable to load the page.Please keep network connection. 尝试B</description>
    </item>
    
    <item>
      <title>Crontab 定时执行任务的环境变量问题</title>
      <link>https://www.3afun.com/post/2017/crontab-%E5%AE%9A%E6%97%B6%E6%89%A7%E8%A1%8C%E4%BB%BB%E5%8A%A1%E7%9A%84%E7%8E%AF%E5%A2%83%E5%8F%98%E9%87%8F%E9%97%AE%E9%A2%98/</link>
      <pubDate>Mon, 20 Nov 2017 17:27:00 +0800</pubDate>
      
      <guid>https://www.3afun.com/post/2017/crontab-%E5%AE%9A%E6%97%B6%E6%89%A7%E8%A1%8C%E4%BB%BB%E5%8A%A1%E7%9A%84%E7%8E%AF%E5%A2%83%E5%8F%98%E9%87%8F%E9%97%AE%E9%A2%98/</guid>
      <description>今天写了一个脚本文件，有用到Python3中time库的localtime函数。在单独执行该脚本文件时候，可以支持获取服务器date时间。但</description>
    </item>
    
    <item>
      <title>使用Charles 进行https抓包</title>
      <link>https://www.3afun.com/post/2017/%E4%BD%BF%E7%94%A8charles-%E8%BF%9B%E8%A1%8Chttps%E6%8A%93%E5%8C%85/</link>
      <pubDate>Sat, 18 Nov 2017 16:57:00 +0800</pubDate>
      
      <guid>https://www.3afun.com/post/2017/%E4%BD%BF%E7%94%A8charles-%E8%BF%9B%E8%A1%8Chttps%E6%8A%93%E5%8C%85/</guid>
      <description>1. Charles安装 官网下载安装Charles: https://www.charlesproxy.com/download/ 2. HTTP抓包 （1）查看电脑IP地址 （2）设置手机HTTP代理 手机连上电脑，点击“设置-&amp;</description>
    </item>
    
    <item>
      <title>Sass 安装 及其常见错误的解决办法</title>
      <link>https://www.3afun.com/post/2017/sass-%E5%AE%89%E8%A3%85-%E5%8F%8A%E5%85%B6%E5%B8%B8%E8%A7%81%E9%94%99%E8%AF%AF%E7%9A%84%E8%A7%A3%E5%86%B3%E5%8A%9E%E6%B3%95/</link>
      <pubDate>Wed, 27 Sep 2017 10:51:00 +0800</pubDate>
      
      <guid>https://www.3afun.com/post/2017/sass-%E5%AE%89%E8%A3%85-%E5%8F%8A%E5%85%B6%E5%B8%B8%E8%A7%81%E9%94%99%E8%AF%AF%E7%9A%84%E8%A7%A3%E5%86%B3%E5%8A%9E%E6%B3%95/</guid>
      <description>Sass是一种css的开发工具，它的安装依赖Ruby，没有安装Ruby的请先安装Ruby。 假定你已经安装了Ruby，则可以直接执行如下语句进</description>
    </item>
    
    <item>
      <title>Tomcat8 多实例 Unix daemon 模式 </title>
      <link>https://www.3afun.com/post/2017/tomcat8-%E5%A4%9A%E5%AE%9E%E4%BE%8B-unix-daemon-%E6%A8%A1%E5%BC%8F/</link>
      <pubDate>Mon, 11 Sep 2017 18:47:00 +0800</pubDate>
      
      <guid>https://www.3afun.com/post/2017/tomcat8-%E5%A4%9A%E5%AE%9E%E4%BE%8B-unix-daemon-%E6%A8%A1%E5%BC%8F/</guid>
      <description>一、事前准备 Tomcat8（版本8.5.20） 下载地址 JDK8（版本号1.8.0_144） 下载地址 二、配置部署 目录说明 jdk 安装目录 /usr/java/jdk1.8.0_144 tomcat 安装目录</description>
    </item>
    
    <item>
      <title>React入门 </title>
      <link>https://www.3afun.com/post/2017/react%E5%85%A5%E9%97%A8/</link>
      <pubDate>Sun, 20 Aug 2017 22:04:00 +0800</pubDate>
      
      <guid>https://www.3afun.com/post/2017/react%E5%85%A5%E9%97%A8/</guid>
      <description>安装 你可以进行一起全局安装 sudo npm install -g create-react-app 创建一个应用 为了创建一个App，执行 create-react-app react_demo cd react_demo 执行完毕后，他会在当前目录下创建一个名为 react_demo 的文件夹。 如图所示</description>
    </item>
    
    <item>
      <title>Python requirements.txt的使用</title>
      <link>https://www.3afun.com/post/2017/python-requirements.txt%E7%9A%84%E4%BD%BF%E7%94%A8/</link>
      <pubDate>Wed, 16 Aug 2017 15:32:00 +0800</pubDate>
      
      <guid>https://www.3afun.com/post/2017/python-requirements.txt%E7%9A%84%E4%BD%BF%E7%94%A8/</guid>
      <description>在构建别人项目环境时，经常可以看到requirements.txt，这个文件记录了所依赖的包和版本。作用就是方便在另一台电脑搭建项目环境。那</description>
    </item>
    
    <item>
      <title>无法安裝COMPOSER 出現 COMMAND NOT FOUND 的解决办法</title>
      <link>https://www.3afun.com/post/2017/%E6%97%A0%E6%B3%95%E5%AE%89%E8%A3%9Dcomposer-%E5%87%BA%E7%8F%BE-command-not-found-%E7%9A%84%E8%A7%A3%E5%86%B3%E5%8A%9E%E6%B3%95/</link>
      <pubDate>Thu, 10 Aug 2017 11:32:00 +0800</pubDate>
      
      <guid>https://www.3afun.com/post/2017/%E6%97%A0%E6%B3%95%E5%AE%89%E8%A3%9Dcomposer-%E5%87%BA%E7%8F%BE-command-not-found-%E7%9A%84%E8%A7%A3%E5%86%B3%E5%8A%9E%E6%B3%95/</guid>
      <description>想要全局安装composer，按照网上的方法下载安装： curl -sS https://getcomposer.org/installer | php mv composer.phar /usr/local/bin/composer 然后检查结果 composer -V 会出现，bash: composer: command not found Installation on Unixes (Ubuntu, Debian, CentOS, 等操作系统上) 如</description>
    </item>
    
    <item>
      <title>nginx pid No such file or directory解决办法</title>
      <link>https://www.3afun.com/post/2017/nginx-pid-no-such-file-or-directory%E8%A7%A3%E5%86%B3%E5%8A%9E%E6%B3%95/</link>
      <pubDate>Wed, 14 Jun 2017 11:32:00 +0800</pubDate>
      
      <guid>https://www.3afun.com/post/2017/nginx-pid-no-such-file-or-directory%E8%A7%A3%E5%86%B3%E5%8A%9E%E6%B3%95/</guid>
      <description>服务器重启后，有时会需要重新启动 nginx，采用 nginx -s reload 提示 nginx: [error] open() &amp;quot;/var/run/nginx.pid&amp;quot; failed (2: No such file or directory) 是因为服务器重启时丢了pid文件。 这种情况下可以使用 nginx -c，</description>
    </item>
    
    <item>
      <title>Python利用BeautifulSoup抓取解析网页数据</title>
      <link>https://www.3afun.com/post/2017/python%E5%88%A9%E7%94%A8beautifulsoup%E6%8A%93%E5%8F%96%E8%A7%A3%E6%9E%90%E7%BD%91%E9%A1%B5%E6%95%B0%E6%8D%AE/</link>
      <pubDate>Wed, 10 May 2017 14:22:00 +0800</pubDate>
      
      <guid>https://www.3afun.com/post/2017/python%E5%88%A9%E7%94%A8beautifulsoup%E6%8A%93%E5%8F%96%E8%A7%A3%E6%9E%90%E7%BD%91%E9%A1%B5%E6%95%B0%E6%8D%AE/</guid>
      <description>网页UI以及HTML组织形式，目的是抓取网页数据并解析。 &amp;lt;div class=&amp;quot;clan__table&amp;quot;&amp;gt; &amp;lt;div class=&amp;quot;clan__headers&amp;quot;&amp;gt; &amp;lt;div class=&amp;quot;clan__headerCaption&amp;quot;&amp;gt;Rank&amp;lt;/div&amp;gt; &amp;lt;div class=&amp;quot;clan__headerCaption&amp;quot;&amp;gt;Name&amp;lt;/div&amp;gt; &amp;lt;div class=&amp;quot;clan__headerCaption&amp;quot;&amp;gt;Level&amp;lt;/div&amp;gt; &amp;lt;div class=&amp;quot;clan__headerCaption&amp;quot;&amp;gt;League&amp;lt;/div&amp;gt; &amp;lt;div class=&amp;quot;clan__headerCaption&amp;quot;&amp;gt;Trophies&amp;lt;/div&amp;gt; &amp;lt;div class=&amp;quot;clan__headerCaption&amp;quot;&amp;gt;Donations&amp;lt;/div&amp;gt; &amp;lt;div class=&amp;quot;clan__headerCaption&amp;quot;&amp;gt;Role&amp;lt;/div&amp;gt; &amp;lt;/div&amp;gt; &amp;lt;div class=&amp;quot;clan__rowContainer&amp;quot;&amp;gt; &amp;lt;div class=&amp;quot;clan__row&amp;quot;&amp;gt; #1 &amp;lt;/div&amp;gt; &amp;lt;div class=&amp;quot;clan__row&amp;quot;&amp;gt; &amp;lt;a class=&amp;quot;ui__blueLink&amp;quot; href=&amp;quot;/p</description>
    </item>
    
    <item>
      <title>多版本Python下执行Twitter Ads API</title>
      <link>https://www.3afun.com/post/2017/%E5%A4%9A%E7%89%88%E6%9C%ACpython%E4%B8%8B%E6%89%A7%E8%A1%8Ctwitter-ads-api/</link>
      <pubDate>Wed, 29 Mar 2017 10:53:00 +0800</pubDate>
      
      <guid>https://www.3afun.com/post/2017/%E5%A4%9A%E7%89%88%E6%9C%ACpython%E4%B8%8B%E6%89%A7%E8%A1%8Ctwitter-ads-api/</guid>
      <description>Twitter-API 地址 https://github.com/twitterdev/twitter-python-ads-sdk Mac电脑自带了Python2.7版本，Twitter在改版本下脚本是可执行的。但是我更想使用Python3，于是在电脑安装了Pyt</description>
    </item>
    
    <item>
      <title>CocosBuilder生成的ccbi文件与lua的交互</title>
      <link>https://www.3afun.com/post/2016/cocosbuilder%E7%94%9F%E6%88%90%E7%9A%84ccbi%E6%96%87%E4%BB%B6%E4%B8%8Elua%E7%9A%84%E4%BA%A4%E4%BA%92/</link>
      <pubDate>Fri, 02 Dec 2016 15:52:00 +0800</pubDate>
      
      <guid>https://www.3afun.com/post/2016/cocosbuilder%E7%94%9F%E6%88%90%E7%9A%84ccbi%E6%96%87%E4%BB%B6%E4%B8%8Elua%E7%9A%84%E4%BA%A4%E4%BA%92/</guid>
      <description>一、添加Control，设置位置。 属性设置如图所示 二、lua代码设置 -- 绑定 loginui[&amp;quot;close_btn&amp;quot;] = handler(self, self.onClose) --响应事件 function AdLayer:onClose() ... end</description>
    </item>
    
  </channel>
</rss>