<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Nginx on 我不是帅才</title>
    <link>https://www.3afun.com/tags/nginx/</link>
    <description>Recent content in Nginx on 我不是帅才</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Wed, 14 Jun 2017 11:32:00 +0800</lastBuildDate>
    
	<atom:link href="https://www.3afun.com/tags/nginx/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>nginx pid No such file or directory解决办法</title>
      <link>https://www.3afun.com/post/2017/nginx-pid-no-such-file-or-directory%E8%A7%A3%E5%86%B3%E5%8A%9E%E6%B3%95/</link>
      <pubDate>Wed, 14 Jun 2017 11:32:00 +0800</pubDate>
      
      <guid>https://www.3afun.com/post/2017/nginx-pid-no-such-file-or-directory%E8%A7%A3%E5%86%B3%E5%8A%9E%E6%B3%95/</guid>
      <description>服务器重启后，有时会需要重新启动 nginx，采用 nginx -s reload 提示 nginx: [error] open() &amp;quot;/var/run/nginx.pid&amp;quot; failed (2: No such file or directory) 是因为服务器重启时丢了pid文件。 这种情况下可以使用 nginx -c，</description>
    </item>
    
    <item>
      <title>nginx 安装SSL证书</title>
      <link>https://www.3afun.com/post/2016/nginx-%E5%AE%89%E8%A3%85ssl%E8%AF%81%E4%B9%A6/</link>
      <pubDate>Thu, 13 Oct 2016 18:32:00 +0800</pubDate>
      
      <guid>https://www.3afun.com/post/2016/nginx-%E5%AE%89%E8%A3%85ssl%E8%AF%81%E4%B9%A6/</guid>
      <description>1.证书准备 下载CA证书，在此我下载下来的文件是IntermediateCA.cer和ssl_certificate.cer 2.Key证书转</description>
    </item>
    
    <item>
      <title>Nginx&#43;Tomcat下的Http 504超时问题的解决办法 </title>
      <link>https://www.3afun.com/post/2015/nginx&#43;tomcat%E4%B8%8B%E7%9A%84http-504%E8%B6%85%E6%97%B6%E9%97%AE%E9%A2%98%E7%9A%84%E8%A7%A3%E5%86%B3%E5%8A%9E%E6%B3%95/</link>
      <pubDate>Fri, 18 Dec 2015 13:50:00 +0800</pubDate>
      
      <guid>https://www.3afun.com/post/2015/nginx&#43;tomcat%E4%B8%8B%E7%9A%84http-504%E8%B6%85%E6%97%B6%E9%97%AE%E9%A2%98%E7%9A%84%E8%A7%A3%E5%86%B3%E5%8A%9E%E6%B3%95/</guid>
      <description>1.前端选用JQuery框架下 延迟超时时间和错误处理 timeout: 6000, error: function (xmlHttpRequest, error) { console.info(xmlHttpRequest, error); } 2.后端Nginx增大缓存区 http { ... # set size to:8*128k fastcgi_buffers 8 128k; send_timeout 60; ... } 3.以上可以</description>
    </item>
    
  </channel>
</rss>